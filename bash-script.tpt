#!/usr/bin/env bash
set -e
IFS=$' \t\n' 

##### INFO #####

#-
#-  Version:		<fill_script_name> 0.0.0.0
#-  
#-  Author:		Petr Vecko
#-  
#-  Copyright:		Copyright (c) Petr Vecko 2018
#-  
#-  License:		GNU General Public License
#-

info() { grep '^#-' "$0" | cut -c4- ; }
expr "$*" : ".*--info" > /dev/null && info

##### HELP #####

#/
#/  Synopsis:
#/  ------------
#/  bash-template.tpt -[a] [--default <file>] args...
#/ 
#/  Description:
#/  ------------
#/  This is a script that will do
#/  something and something else until
#/  you dont want to do something anymore.
#/
#/  Options:
#/  ------------
#/  -a|--aoption		Do stuff a
#/    |--default		Default setup 
#/  -h|--help		Display this help message
#/ 
#/  Examples:
#/  ------------
#/  ./bash-template.tpt -a <var> --default
#/

usage() { grep '^#/' "$0" | cut -c4- ; }
expr "$*" : ".*--help" > /dev/null && usage

##### ERROR LOG #####

readonly LOG_FILE="/tmp/$(basename "$0").log"
info() 		{ echo "[INFO]	 $0	$1" | tee -a "$LOG_FILE" >&2 ; }
warning() 	{ echo "[WARN]   $0	$1" | tee -a "$LOG_FILE" >&2 ; }
error()		{ echo "[ERROR]  $0	$1" | tee -a "$LOG_FILE" >&2 ; }
fatal()		{ echo "[FATAL]  $0	$1" | tee -a "$LOG_FILE" >&2 ; exit 1 ; }

##### INTERPRET PARAMETERS #####

POSITIONAL=()

while [[ $# -gt 0 ]]
do
	key="$1"  

	case $key in
		-a|--a_option)
			A_OPTION="$2"
			shift 2
			;;
		--default)
			DEFAULT=YES
			shift
			;;
		*)    # unknown option     
			POSITIONAL+=("$1") # save it in an array for later
			shift
			;;
	esac 
done

echo "${POSITIONAL[@]}"

set -- "${POSITIONAL[@]}" # restore positional parameters  

echo A_OPTION = "${A_OPTION}"
echo DEFAULT = "${DEFAULT}"

##### SCRIPT FUNCTIONS #####



##### START UP #####



##### MAIN SCRIPT #####



##### CLEAN UP #####


